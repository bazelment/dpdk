# This file is the top level BUILD file to use DPDK as a library when
# building with bazel. Most application libraries should just depend
# on dpdk library, which is essentially the core collection of DPDK
# libraries. A cc_binary that uses DPDK should put 'intel' into the
# deps if it wants to use Intel NIC, or any other PMD defined in
# drivers/net/BUILD.
licenses(['notice'])

# Generated by gcc -D...  -dM -E - < /dev/null |grep RTE
#
# We disabled F16C and RDRAND explicitly because they are not
# supported by kvm and no real code depends on them.
#
# RTE_MACHINE_CPUFLAG_AES was disabled because Intel(R) Xeon(R) CPU
# E5-2667 v3 @ 3.20GHz doesn't support it. And the only place using
# AES is in examples/dpdk_qat/crypto.c
RTE_ENABLED_CPU_FEATURES = [
  'RTE_MACHINE_CPUFLAG_AVX',
  'RTE_MACHINE_CPUFLAG_AVX2',
  'RTE_MACHINE_CPUFLAG_FSGSBASE',
  'RTE_MACHINE_CPUFLAG_PCLMULQDQ',
  'RTE_MACHINE_CPUFLAG_SSE',
  'RTE_MACHINE_CPUFLAG_SSE2',
  'RTE_MACHINE_CPUFLAG_SSE3',
  'RTE_MACHINE_CPUFLAG_SSE4_1',
  'RTE_MACHINE_CPUFLAG_SSE4_2',
  'RTE_MACHINE_CPUFLAG_SSSE3',
]

RTE_CPU_DEFINES = RTE_ENABLED_CPU_FEATURES + [
  'RTE_COMPILE_TIME_CPUFLAGS=' + ','.join(RTE_ENABLED_CPU_FEATURES),
]

cc_library(
  name = 'build_config',
  visibility = [":__subpackages__"],
  hdrs = [
    'linux-k8/rte_config.h',
  ],
  defines = [
    'RTE_MAX_QUEUES_PER_PORT=256',
  ] + RTE_CPU_DEFINES,
  includes = [
    'linux-k8',
    'drivers/net/ring',
  ]
)

cc_library(
  name = 'dpdk',
  visibility = ["//visibility:public"],
  deps = [
    '//third_party/dpdk/lib:acl',
    '//third_party/dpdk/lib:cmdline',
    '//third_party/dpdk/lib:eal',
    '//third_party/dpdk/lib:ether',
    '//third_party/dpdk/lib:ip_frag',
    '//third_party/dpdk/lib:mbuf',
    '//third_party/dpdk/lib:net',
  ],
)

# Intel PMD drivers
cc_library(
  name = 'intel',
  visibility = ["//visibility:public"],
  deps = [
    '//third_party/dpdk/drivers/net:e1000',
    '//third_party/dpdk/drivers/net:em',
    '//third_party/dpdk/drivers/net:i40e',
    '//third_party/dpdk/drivers/net:igb',
    '//third_party/dpdk/drivers/net:ixgbe',
  ],
)
